name: Inspect, Build and Release

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        required: true
        default: 'warning'
      tags:
        description: 'Manual building'
env:
  NPM_CONFIG_CACHE: ${{ github.workspace }}/.npm

jobs:
  inspect-build-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      # - name: Install Angular CLI
      #   run: npm install -g @angular/cli@17.1.3

      - name: Cache NPM packages
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-

      - name: NPM run clean installation
        run: npm ci

      - name: npm install
        run: |
          npm install

      # - name: Test
      #   run: npm test -- --watch=false --browsers=ChromeHeadlessCI --code-coverage --reporters="junit,jasmine-order"
      #   working-directory: ${{ github.workspace }}

      - name: npm build
        run: |
          npm run build

      - name: Read VERSION.txt and set ImageTag
        id: version
        run: |
          VERSION=$(cat ${{ github.workspace }}/VERSION.txt)
          echo "IMAGE_TAG=${VERSION}.${{ github.run_number }}" >> $GITHUB_ENV

      - name: Compress dist directory
        env:
          IMAGE_TAG: ${{ env.IMAGE_TAG }}
        run: |
          cd dist/
          zip -r ../${{ env.IMAGE_TAG }}.zip ./*

      - name: Show files in workspace
        run: |
          ls -la ${{ github.workspace }}

      - name: Archive build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: apuntador
          path: dist/
          if-no-files-found: error

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          IMAGE_TAG: ${{ env.IMAGE_TAG }}
        with:
          tag_name: ${{ env.IMAGE_TAG }}
          release_name: ${{ env.IMAGE_TAG }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload_release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ github.workspace }}/${{ env.IMAGE_TAG }}.zip
          asset_name: ${{ env.IMAGE_TAG }}.zip
          asset_content_type: application/zip
